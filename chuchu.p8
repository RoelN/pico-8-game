pico-8 cartridge // http://www.pico-8.com
version 15
__lua__

mice = {} -- all the mouses
micefreq = 12 -- how many new mice per frame
mf = micefreq

pointer = {}
pointer.x = 1 -- matches map location
pointer.y = 1 -- matches map location
pointer.sprite = 6
pointer.frames = 3
pointer.frame = pointer.frames
dirsprite = 0

tiles = {}
tiles.history = {}
tiles.max = 4

flashcolor = 0

player = {}
player.score = 0;

level = {}
level.currentmice = 0
level.maxmice = 24
level.spawnpoint = {}
level.spawnpoint.x = 72
level.spawnpoint.y = 24
level.endpoint = {}
level.endpoint.x = 80
level.endpoint.y = 64
level.time = 60 -- seconds

elapsed = 0

death = {}
death.x = 4
death.y = 4
death.timer = 150 -- fps
death.sprite = 13


-- place a direction tile
function placetile()
	if(mget(pointer.x, pointer.y, dirsprite) ~= 1) then
		pointer.sprite = 7
		mset(pointer.x, pointer.y, dirsprite)
	end
end

-- move pointer
function movepointer()
	-- use mouse animation threshold to poll controls
	pointer.frame -= 1
	if (pointer.frame ~= 0) return
	pointer.frame = pointer.frames

	-- if button is pushed, let player select a direction tile
	if (btn(4)) then
		if (btn(0)) dirsprite = 5 -- left
		if (btn(1)) dirsprite = 3 -- right
		if (btn(2)) dirsprite = 2 -- up
		if (btn(3)) dirsprite = 4 -- down

		placetile()
	else
		-- place direction tile
		if(pointer.sprite ~= 6) then
			pointer.sprite = 6

			if(dirsprite ~= 0) then
				dirsprite = 0
				add(tiles.history, { pointer.x, pointer.y })

				-- remove oldest direction tile
				if(#tiles.history > tiles.max) then
					-- remove from playing field the oldest item in
					-- the table by sticking a blank sprite on the
					-- map for its x and y coordinates...
					mset(tiles.history[1][1], tiles.history[1][2], 0)
					-- ...and removing it from the table
					del(tiles.history, tiles.history[1])
				end
			end
		end

		-- get direction from player
		if (btn(0)) pointer.x -= 1
		if (btn(1)) pointer.x += 1
		if (btn(2)) pointer.y -= 1
		if (btn(3)) pointer.y += 1

		-- stay inside playable area
		if (pointer.x == 0) pointer.x = 1
		if (pointer.y == 0) pointer.y = 1
		if (pointer.x == 15) pointer.x = 14
		if (pointer.y == 15) pointer.y = 14
	end
end

-- see if mouse needs to change direction
function flipmouse(mouse)
	local x_check = 0
	local y_check = 0

	if not (flr(mouse.x) % 8 == 0 and flr(mouse.y) % 8 == 0) then
		return
	end

	-- mouse has arrived on a new tile, what's
	-- on the next tile?
	if(mouse.direction == 1) then
		y_check = -1
	end
	if(mouse.direction == 2) then
		x_check = 1
	end
	if(mouse.direction == 3) then
		y_check = 1
	end
	if(mouse.direction == 4) then
		x_check = -1
	end

	next_tile = mget((mouse.x / 8) + x_check, (mouse.y / 8) + y_check)
	current_tile = mget((mouse.x / 8), (mouse.y / 8))

	if(next_tile == 1 or next_tile == 9 or next_tile == 11 or next_tile == 12) then
		mouse.direction += 1
		if(mouse.direction > 4) then
			mouse.direction = 1
		end
		-- we turned, now check tile in new direction
		flipmouse(mouse)
	end

	if(current_tile >= 2 and current_tile <= 5) then
		mouse.direction = current_tile - 1
	end

	-- did mouse go into mousehole?
	if(mouse.x == level.endpoint.x and mouse.y == level.endpoint.y) then
		mouse.finished = 1
	end

	-- did mouse die?
	if(mouse.x == (death.x * 8) and mouse.y == (death.y * 8)) then
		mouse.death = 1
	end
end

function mousemove(mouse)
	-- animate through three frames
	mouse.frame += 1
	if(mouse.frame == mouse.frames) then
		mouse.sprite += 1
		mouse.frame = 0
	end

	if mouse.sprite > 19 then
		mouse.sprite = 16
	end

	flipmouse(mouse)

	-- move mouse depending on mouse.direction
	if mouse.direction == 1 then
		mouse.y -= mouse.speed
	end
	if mouse.direction == 2 then
		mouse.x += mouse.speed
	end
	if mouse.direction == 3 then
		mouse.y += mouse.speed
	end
	if mouse.direction == 4 then
		mouse.x -= mouse.speed
	end

end

function mousedraw(mouse)
	if(mouse.finished == 1) then
		player.score += 1
		level.currentmice -= 1
		del(mice, mouse)
	elseif(mouse.death == 1) then
		player.score -= 1
		level.currentmice -= 1
		del(mice, mouse)
	else
		spr(mouse.sprite, mouse.x, mouse.y)
	end
end

function initmouse()
	m = {}
	m.x = level.spawnpoint.x
	m.y = level.spawnpoint.y
	m.sprite = 16
	m.speed = 1
	-- m.direction = 2 -- 1 = up, 2 = right, 3 = down, 4 = left
	m.direction = flr(rnd(4)) + 1

	m.frame = 0
	m.frames = 2
	m.finished = 0
	m.death = 0

	add(mice, m)
end

function addmouse()
	if(level.maxmice <= 0) then
		return
	end

	if(mf == 0) then
		mf = micefreq
		initmouse()
		level.maxmice -= 1
		level.currentmice += 1
	end

	mf -= 1
end



function movedeath()
	dt -= 1
	if(dt <= 0) then
		dt = death.timer
		death.x = flr(rnd(13)) + 2
		death.y = flr(rnd(13)) + 2

		candeath = mget(death.x, death.y)

		if((death.x * 8) == level.spawnpoint.x and (death.y * 8) == level.spawnpoint.y) then
			movedeath()
		end

		if((death.x * 8) == level.endpoint.x and (death.y * 8) == level.endpoint.y) then
			movedeath()
		end

		if(candeath ~= 0) then
			movedeath()
		end
	end
end

function _update()
	-- if(mouse.finished == 0) then
	-- 	mousemove(mice[0])
	-- end
	foreach(mice, mousemove)
	addmouse()
	movepointer()
    movedeath()
end

function _draw()
	cls()
	map(0, 0, 0, 0, 16, 16)

	flashcolor = flashcolor + 1
	if(flashcolor > 16) flashcolor = 0

	-- how much time does the player have left?
	local timeleft = level.time - elapsed
	if(timeleft <= 0) then
		print("time's up sucker!", 32, 48, flashcolor)
	else
		elapsed = flr(time() - last)

		-- put pointer in screen (the thing the player controls)
		spr(pointer.sprite, (pointer.x * 8), (pointer.y * 8))

		foreach(mice, mousedraw)
	end

    spr(death.sprite, (death.x * 8), (death.y * 8))

	-- draw spawnpoint
	spr(10, level.spawnpoint.x, level.spawnpoint.y)

	-- draw endpoint
	spr(8, level.endpoint.x, level.endpoint.y)

	if(level.maxmice == 0 and level.currentmice == 0) then
		print("level completed!", 32, 48, flashcolor)
	end

	local ps = player.score
	-- if(ps < 10 and ps > 0) then
	-- 	ps = " "..tostr(ps)
	-- end

	local tl = timeleft
	if(tl < 10) then
		tl = "0"..tostr(tl)
	end

	print(ps, 52, 0)
	print(tl, 84, 0)
end

function _init()
	-- initlevel()
	last = time()
	dt = death.timer
end

__gfx__
00000000444f4444cccccccccccccccccccccccccccccccc6666666688888888000ee00000000000005555000000000000000000077777000777770000000000
00000000f4040f04ccc11cccc1cc1cccc1cccc1cccc1cc1c600000078000000e00e22e0000000000050000500999990008888800787778707177717000000000
000000004440444fcc1cc1cccc1cc1cccc1cc1cccc1cc1cc600000078000000e0e2222e000000000500000059979799088707880788788707117117000000000
0000000044044f44c1cccc1cccc1cc1cccc11cccc1cc1ccc600000078000000ee22ee22e00000000500000059919199087700780777777707777777000000000
0000000044f44044ccc11cccccc1cc1cc1cccc1cc1cc1ccc600000078000000ee22ee22e00000000500000050999990088777880777077707770777000000000
0000000040444444cc1cc1cccc1cc1cccc1cc1cccc1cc1cc600000078000000e0e2222e000000000500000050900090008888800777777707777777000000000
000000004f0f4404c1cccc1cc1cc1cccccc11cccccc1cc1c600000078000000e00e22e004f0f4404500000054f0f44044f0f4404070707000707070000000000
000000000444f444cccccccccccccccccccccccccccccccc677777778eeeeeee000ee0000444f444555555550444f4440444f444070707000000000000000000
09999990099999900999999009999990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
99799799997997999979979999799799000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
99199199991991999919919999199199000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
99999999999999999999999999999999000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
99911999999119999991199999911999000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
99999999999999999999999999999999000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
09990999999099909909990990999099000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00900090090009009000900000090009000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
01010101010b0909010c09090101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000100000000000001000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000001000000000000000001000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101000000000000000100000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000100000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000001000000000000000100000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000001000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000001010000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000010000000001010000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000001000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
